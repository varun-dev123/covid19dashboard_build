{"version":3,"sources":["layouts/AppHeader.jsx","components/coronavirus/CoronavirusItem.jsx","components/stats/StatsItem.jsx","components/stats/Stats.jsx","components/filters/SearchFilter.jsx","components/coronavirus/Coronavirus.jsx","components/india/indiaCoronavirusItem.jsx","components/india/chartData.jsx","components/india/DistrictWise.jsx","components/india/StateWise.jsx","components/india/IndiaCoronavirus.jsx","components/country/CountryCoronaItem.jsx","components/country/CountryChartData.jsx","components/country/CountryCorona.jsx","components/references/References.jsx","layouts/AppContent.jsx","layouts/AppFooter.jsx","App.js","serviceWorker.js","index.js"],"names":["AppHeader","className","to","CoronavirusItem","item","style","display","country","src","countryInfo","flag","alt","title","cases","active","deaths","recovered","todayCases","todayDeaths","StatsItem","Stats","props","getStats","axios","request","method","headers","then","response","setState","stats","data","catch","err","console","log","state","rowStats","this","renderStats","Component","SearchFilter","searchHandler","e","searchData","target","value","getSearchData","clearInput","search","type","onChange","placeholder","Coronavirus","getData","sortFilter","sortBy","rowData","dt","sort","a","b","renderData","length","filter","toLowerCase","indexOf","map","i","key","htmlFor","name","id","onClick","IndiaCoronavirusItem","critical","ChartData","crona","timeline","cronaCasesDate","Object","keys","cronaCasesValue","values","deathsDate","deathsValue","chartCases","labels","datasets","label","backgroundColor","chartDeaths","width","height","options","maintainAspectRatio","StateWise","districtData","stateName","get","va","renderTable","confirmed","React","showModal","modal","document","getElementById","hideModal","lastUpdated","totalStats","lastRefreshed","statewise","total","rendermodal","DistrictWise","IndiaCoronavirus","CountryCoronaItem","CountryCartData","countryName","CountryCorona","location","pathname","References","href","rel","AppContent","exact","path","component","AppFooter","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.263bf9fa.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink, Link} from 'react-router-dom';\nexport default function AppHeader() {\n    return (\n        <div className=\"app-header\">\n            <div className=\"app-logo\">\n                <Link to=\"/\"><span className=\"ft-danger\">Covid19</span> <span className=\"db\">Dashboard </span></Link>\n            </div> \n            <div>\n                <h1 className=\"app-title hidden-sm\">COVID-19 (Coronavirus) <span className=\"hidden-md\"> Dashboard</span></h1>\n            </div>\n            <div className=\"action-btn\">\n                {/* <NavLink activeClassName='active' to=\"/world\" className=\"nav-link\">World</NavLink>\n                <NavLink activeClassName='active' to=\"/india\" className=\"nav-link\">India</NavLink> */}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nconst  CoronavirusItem = ({item}) => {\n    return (\n        <div className=\"corona-item\" style={{display: item.country === \"World\" ? 'none' : 'block' }}>\n            {/* <Link to={`/${item.country}`}> */}\n            <Link to={`#`}>\n                <div className=\"total-cases\">\n                    <div className=\"title\">\n                       <img src={item.countryInfo.flag} alt=\"\"/> {item.country}\n                    </div>\n                    <div className=\"count\" title=\"Total Cases\">\n                        {item.cases}\n                    </div>\n                </div>\n                <ul className=\"list-cases\">\n                    <li>\n                        {item.active}\n                        <p>Active</p>\n                    </li>\n                    <li>\n                        {item.deaths}\n                        <p>Deaths</p>\n                    </li>\n                    <li>\n                        {item.recovered}\n                        <p>Recovered</p>\n                    </li>\n                </ul>\n                <ul className=\"today-cases\">\n                <li className=\"today\">\n                    {item.todayCases}\n                    <p>Today Cases</p>\n                </li>\n                <li className=\"death\">\n                    {item.todayDeaths}\n                    <p>Today Deaths</p>\n                </li>\n            </ul>\n            </Link>\n        </div>\n    )\n}\n\nexport default CoronavirusItem","import React from 'react'\n\nconst  StatsItem = ({item}) => {\n    return (\n        <div className=\"stats-list\">\n            <div className=\"stats-item cases\">\n                {item.cases}\n                <p>Total Cases</p>\n            </div>\n            <div className=\"stats-item deaths\">\n                {item.deaths}\n                <p>Deaths</p>\n            </div>\n            <div className=\"stats-item recovered\">\n                {item.recovered}\n                <p>Recovered</p>\n            </div>\n            <div className=\"stats-item active\">\n                {item.active}\n                <p>Active</p>\n            </div>\n        </div>\n    )\n}\n\nexport default StatsItem","import React, { Component } from 'react';\nimport axios from 'axios';\nimport StatsItem from \"./StatsItem\";\nimport rowStats from \"../data/stats.json\";\n\nclass Stats extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stats:rowStats\n        };\n    }\n\n    componentDidMount (){\n        this.getStats();\n    }\n\n    getStats = () => {\n        axios.request('https://corona.lmao.ninja/v2/all',{\n            method: \"GET\",\n            headers: {\n                \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"74bf35c6b4msh23b08db937905cbp1c5a4ejsnd6dced0f920d\"\n            }\n        }).then(response => {\n            this.setState({\n                stats:response.data\n            })\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    render() {\n        const {stats} = this.state;\n        const renderStats = <StatsItem item={stats} />\n\n        return( \n            <div className=\"stats\">\n                {renderStats}\n            </div>\n        )\n    }\n}\n\nexport default Stats;","import React, { Component } from 'react'\n\n\n\nclass SearchFilter extends Component {\n    constructor(){\n        super();\n        this.state = {\n            search: \"\"\n        }\n    }\n   searchHandler =(e) =>{\n        const searchData = e.target.value\n        this.props.getSearchData(searchData)\n    }\n\n    clearInput = (search) =>{\n        console.log(search)\n    }\n    render(){\n        return (\n            <div className=\"form-group search-filter\">\n                <div className=\"search\">\n                    <i className=\"fa fa-search\"></i>\n                    <input type=\"text\"  className=\"search-input\" onChange={this.searchHandler} placeholder=\"Search Country Name\"/>\n                    {/* <span className=\"clear\" onClick={this.props.clearInput()}><i className=\"fas fa-times-circle\"></i></span> */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchFilter","import React, { Component } from 'react';\nimport axios from 'axios';\nimport CoronavirusItem from \"./CoronavirusItem\";\nimport Stats from \"../stats/Stats\";\nimport SearchFilter from '../filters/SearchFilter';\nimport rowData from \"../data/country.json\";\n\n\nclass Coronavirus extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data:rowData,\n            search:\"\",\n            sortBy: \"cases\"\n        };\n    }\n\n\n    // MOUNT DATA\n    componentDidMount (){\n        this.getData();\n    }\n\n    // GET DATA\n    getData = () => {\n        axios.request('https://corona.lmao.ninja/v2/countries',{\n            method: \"GET\",\n            headers: {\n                \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"74bf35c6b4msh23b08db937905cbp1c5a4ejsnd6dced0f920d\"\n            }\n        }).then(response => {\n            this.setState({\n                data:response.data\n            })\n            \n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    // SEARCH \n    getSearchData =(value)=>{\n        this.setState({\n            search:value\n        })\n    }\n\n    // FILTER\n    sortFilter = (e) =>{\n        let sortBy = e.target.value;\n       this.setState({\n           sortBy: sortBy\n       })\n    }\n\n    render() {\n        const {data, search, sortBy} = this.state;\n\n        let dt = null;\n\n        if(sortBy === \"cases\") {\n            dt = data.sort((a,b) => (a.cases < b.cases ? 1 : -1))\n        } \n        else if(sortBy === \"active\") {\n            dt = data.sort((a,b) => (a.active < b.active ? 1 : -1))\n        }\n        else if(sortBy === \"recovered\") {\n            dt = data.sort((a,b) => (a.recovered < b.recovered ? 1 : -1))\n        }\n        else if(sortBy === \"deaths\") {\n            dt = data.sort((a,b) => (a.deaths < b.deaths ? 1 : -1))\n        }\n        else{\n            dt= data\n        }\n\n        const filteredData =    search && search.length \n                                ? dt.filter(item => {\n                                    return  item.country.toLowerCase().indexOf(search.toLowerCase()) !== -1\n                                })\n                                : data\n\n        const renderData =  filteredData.map((item, i) => {\n            return <CoronavirusItem key={i} item={item} />\n        })\n\n        return( \n            <div>\n                <Stats />\n                <div className=\"heading-row\">\n                    <div className=\"heading\">\n                        <span className=\"hidden-sm\">(COVID-19)</span> Cases across the globe\n                    </div>\n                    <div className=\"form-group\">\n                        <div>\n                            <label htmlFor=\"\">Sort By:</label>\n                            <select name=\"\" className=\"form-control\" id=\"\" onClick={this.sortFilter}>\n                                <option value=\"cases\">Cases</option>\n                                <option value=\"active\">Active</option>\n                                <option value=\"recovered\">Recovered</option>\n                                <option value=\"deaths\">Deaths</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <SearchFilter getSearchData={this.getSearchData} clearInput={() => this.clearInput({search})}/>\n                \n                <div className=\"corona-list\">\n                    {renderData && renderData.length ? renderData : \"Data not found\" }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Coronavirus;","import React from 'react'\n\nconst  IndiaCoronavirusItem = ({stats,countryInfo}) => {\n    //console.log(countryInfo.flag)\n    return (\n        <div>\n            <div className=\"coutry-stats-list\">\n                <div className=\"stats-item\">\n                    <img src={countryInfo.flag} alt=\"\"/>\n                    <h4>India</h4>\n                </div>\n                <div className=\"stats-item cases\">\n                    {stats.cases}\n                    <p>Total Cases</p>\n                </div>\n                <div className=\"stats-item deaths\">\n                    {stats.deaths}\n                    <p>Deaths</p>\n                </div>\n                <div className=\"stats-item recovered\">\n                    {stats.recovered}\n                    <p>Recovered</p>\n                </div>\n            </div>\n            <div className=\"more-info\">\n                <div>\n                    {stats.todayCases}\n                    <p>Today cases</p>\n                </div>\n                <div className=\"ft-warning\">\n                    {stats.critical}\n                    <p>Critical</p>\n                </div>\n                <div>\n                    {stats.active}\n                    <p>Active</p>\n                </div>\n                <div className=\"ft-danger \">\n                    {stats.todayDeaths}\n                    <p>Today Deaths</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default IndiaCoronavirusItem","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Line} from \"react-chartjs-2\"; \n\nclass ChartData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:{},\n            chartCases:{},\n            chartDeaths:{}\n        };\n    }\n\n    componentDidMount (){\n        this.getData();\n    }\n\n    getData = () => {\n        axios.request(`https://corona.lmao.ninja/v2/historical/india`,{\n            method: \"GET\",\n            headers: {\n                \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"74bf35c6b4msh23b08db937905cbp1c5a4ejsnd6dced0f920d\"\n            }\n        }).then(response => {\n           \n            // Cases\n            const crona = response.data.timeline.cases;\n            let cronaCasesDate= Object.keys(crona);\n            let cronaCasesValue= Object.values(crona);\n\n            // Deaths\n            const deaths = response.data.timeline.deaths;\n            let deathsDate= Object.keys(deaths);\n            let deathsValue= Object.values(deaths);\n         \n            \n            this.setState({\n                chartCases:{\n                  labels: cronaCasesDate,\n                  datasets:[\n                    {\n                      label:'Total Cases',\n                      data:cronaCasesValue,\n                      backgroundColor:[\n                        'rgba(255, 99, 132, 0.6)',\n                        'rgba(54, 162, 235, 0.6)',\n                        'rgba(255, 206, 86, 0.6)',\n                        'rgba(75, 192, 192, 0.6)',\n                        'rgba(153, 102, 255, 0.6)',\n                        'rgba(255, 159, 64, 0.6)',\n                        'rgba(255, 99, 132, 0.6)'\n                      ]\n                    }\n                  ]\n                },\n                chartDeaths:{\n                    labels: deathsDate,\n                    datasets:[\n                      {\n                        label:'Total Deaths',\n                        data:deathsValue,\n                        backgroundColor:[\n                          'rgba(255, 99, 132, 0.6)',\n                          'rgba(54, 162, 235, 0.6)',\n                          'rgba(255, 206, 86, 0.6)',\n                          'rgba(75, 192, 192, 0.6)',\n                          'rgba(153, 102, 255, 0.6)',\n                          'rgba(255, 159, 64, 0.6)',\n                          'rgba(255, 99, 132, 0.6)'\n                        ]\n                      }\n                    ]\n                  }\n            });\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n\n\n    render() {\n       //const {data} = this.state;\n     //  console.log(data.cases);\n        return( \n            <div className=\"chart-data\">\n                <div>\n                    <h1>Total Cases</h1>\n                    <Line\n                        data={this.state.chartCases}\n                        width={100}\n                        height={40}\n                        options={{ maintainAspectRatio: false }}\n                    />\n                </div>\n                <div>\n                    <h1>Total Deaths</h1>\n                    <Line\n                        data={this.state.chartDeaths}\n                        width={100}\n                        height={40}\n                        options={{ maintainAspectRatio: false }}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ChartData;","import React from 'react';\nimport axios from \"axios\";\n\nclass StateWise extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            districtData: [],\n            stateName:\"\"\n        };\n    }\n\n    componentDidMount(){\n        this.getData();\n    } \n\n    getData(){\n      let stateName = this.props.item;\n        \n        axios.get(\"https://api.covid19india.org/state_district_wise.json\")\n        .then(response => {\n           // let data  =  response.data;\n            let data  =  response.data[stateName].districtData;\n           // console.log(data);\n\n            this.setState({\n                districtData:data,\n                stateName:stateName\n            })\n        })\n    }    \n\n    render() {\n        const {districtData, stateName} = this.state;\n        //console.log(districtData);\n        let dt = Object.keys(districtData);\n        let va = Object.values(districtData);\n      \n       const renderTable = dt.map((item, i) => {\n           //console.log(item);\n            return <tr key={i}>\n                \n                <td>{item}</td>\n                <td>{va[i].confirmed}</td>\n            </tr>\n        })\n\n        return( \n            <div className=\"district-wise\">\n                <div className=\"modal-header\">\n                    <h1 className=\"large\">{stateName}</h1>\n                </div>\n                <div className=\"modal-content\">\n                    <table className=\"fixed-tbl\">\n                        <thead>\n                            <tr>\n                                <th>City Name</th>\n                                <th>Confirmed</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {renderTable}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n            \n        );\n    }\n}\n\nexport default StateWise;","import React from 'react';\nimport axios from \"axios\";\nimport DistrictWise from \"./DistrictWise\"\n\nclass StateWise extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            lastUpdated:'',\n            totalStats:{},\n            modal:false,\n            stateName : \"\",\n        };\n    }\n\n    componentDidMount(){\n        this.getData();\n    } \n\n    getData(){\n        axios.get(\"https://api.rootnet.in/covid19-in/unofficial/covid19india.org/statewise\")\n        .then(response => {\n            //console.log(response.data.data.statewise);\n            let lastUpdated = response.data.data.lastRefreshed;\n            let data = response.data.data.statewise;\n            let totalStats = response.data.data.total;\n            this.setState({\n                data:data,\n                lastUpdated:lastUpdated,\n                totalStats:totalStats\n            })\n        })\n    }    \n\n    showModal = (state) => {\n        this.setState({\n            modal:true,\n            stateName:state\n        })\n        let body = document.getElementById(\"body\");\n       // body.classList.add(\"freezBody\");\n    }\n\n    hideModal = (state) => {\n        this.setState({\n            modal:false,\n        })\n        \n        let body = document.getElementById(\"body\");\n        // body.classList.remove(\"freezBody\");\n    }\n\n\n    render() {\n        const {data, modal} = this.state\n        const renderTable = data.map((item,i) => {\n            return (\n                <tr key={i}  onClick={() =>this.showModal(item.state)} style={{display: item.confirmed === 0 ? 'none' : '' }}>\n                    <td><span className=\"title\" onClick={() =>this.showModal(item.state)}>{item.state}</span></td>\n                    <td>{item.confirmed}</td>\n                    <td>{item.recovered}</td>\n                    <td>{item.deaths}</td>\n                    <td>{item.active}</td>\n                </tr>\n            )\n        })\n\n        const rendermodal = modal === true ? (\n        <div className=\"block district-modal modal\">\n            <div className=\"modal-body\">\n                <button className=\"v-btn v-btn-danger close-modal\" onClick={this.hideModal}>X</button>\n                <DistrictWise item = {this.state.stateName} />\n            </div>\n        </div>) : \"\"\n        return( \n            <div className=\"wise-data\">\n                <div className=\"state-wise\">\n                    <h1 className=\"large\">29 STATES</h1>\n                    <table className=\"state-wise-table\">\n                        <thead>\n                            <tr className=\"fixed-tbl-header\">\n                                <th>State</th>\n                                <th><span className=\"hidden-sm\">Confirmed</span> <span className=\"status confirmed\">[C]</span></th>\n                                <th><span className=\"hidden-sm\">Recovered</span> <span className=\"status recovered\">[R]</span></th>\n                                <th><span className=\"hidden-sm\">Deaths</span> <span className=\"status deaths\">[D]</span></th>\n                                <th><span className=\"hidden-sm\">Active</span> <span className=\"status active\">[A]</span></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {renderTable}\n                        </tbody>\n                    </table>\n                </div>\n                {rendermodal}\n            </div>\n        );\n    }\n}\n\nexport default StateWise;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport IndiaCoronavirusItem from \"./indiaCoronavirusItem\";\nimport ChartData from \"./chartData\"\nimport StateWise from './StateWise';\n\nclass IndiaCoronavirus extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stats:\"\",\n            countryInfo:\"\"\n        };\n    }\n\n    componentDidMount (){\n        this.getData();\n    }\n\n    getData = () => {\n        axios.request(`https://corona.lmao.ninja/v2/countries/india`,{\n            method: \"GET\",\n            headers: {\n                \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"74bf35c6b4msh23b08db937905cbp1c5a4ejsnd6dced0f920d\"\n            }\n        }).then(response => {\n            this.setState({\n                stats:response.data,\n                countryInfo:response.data.countryInfo,\n            })\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    render() {\n        const {stats, countryInfo} = this.state;\n        const renderData = <IndiaCoronavirusItem stats={stats} countryInfo={countryInfo} />\n\n        return( \n            <div className=\"country-info\">\n                {renderData}\n                <ChartData />\n                <StateWise />\n            </div>\n        )\n    }\n}\n\nexport default IndiaCoronavirus;","import React from 'react'\n\nconst  CountryCoronaItem = ({stats,countryInfo}) => {\n    //console.log(countryInfo.flag)\n    return (\n        <div>\n            <div className=\"coutry-stats-list\">\n                <div className=\"stats-item\">\n                    <img src={countryInfo.flag} alt=\"\"/>\n                    <h4>{stats.country}</h4>\n                </div>\n                <div className=\"stats-item cases\">\n                    {stats.cases}\n                    <p>Total Cases</p>\n                </div>\n                <div className=\"stats-item deaths\">\n                    {stats.deaths}\n                    <p>Deaths</p>\n                </div>\n                <div className=\"stats-item recovered\">\n                    {stats.recovered}\n                    <p>Recovered</p>\n                </div>\n            </div>\n            <div className=\"more-info\">\n                <div>\n                    {stats.todayCases}\n                    <p>Today cases</p>\n                </div>\n                <div className=\"ft-warning\">\n                    {stats.critical}\n                    <p>Critical</p>\n                </div>\n                <div>\n                    {stats.active}\n                    <p>Active</p>\n                </div>\n                <div className=\"ft-danger \">\n                    {stats.todayDeaths}\n                    <p>Today Deaths</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CountryCoronaItem","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Line} from \"react-chartjs-2\"; \n\nclass CountryCartData extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data:{},\n            chartCases:{},\n            chartDeaths:{}\n        };\n    }\n\n    componentDidMount (){\n        this.getData();\n    }\n\n    getData = () => {\n        let name= this.props.countryName;\n        //console.log(name);\n        axios.request(`https://corona.lmao.ninja/v2/historical${name}`,{\n            method: \"GET\",\n            headers: {\n                \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"74bf35c6b4msh23b08db937905cbp1c5a4ejsnd6dced0f920d\"\n            }\n        }).then(response => {\n           \n            // Cases\n            const crona = response.data.timeline.cases;\n            let cronaCasesDate= Object.keys(crona);\n            let cronaCasesValue= Object.values(crona);\n\n            // Deaths\n            const deaths = response.data.timeline.deaths;\n            let deathsDate= Object.keys(deaths);\n            let deathsValue= Object.values(deaths);\n         \n            \n            this.setState({\n                chartCases:{\n                  labels: cronaCasesDate,\n                  datasets:[\n                    {\n                      label:'Total Cases',\n                      data:cronaCasesValue,\n                      backgroundColor:[\n                        'rgba(255, 99, 132, 0.6)',\n                        'rgba(54, 162, 235, 0.6)',\n                        'rgba(255, 206, 86, 0.6)',\n                        'rgba(75, 192, 192, 0.6)',\n                        'rgba(153, 102, 255, 0.6)',\n                        'rgba(255, 159, 64, 0.6)',\n                        'rgba(255, 99, 132, 0.6)'\n                      ]\n                    }\n                  ]\n                },\n                chartDeaths:{\n                    labels: deathsDate,\n                    datasets:[\n                      {\n                        label:'Total Deaths',\n                        data:deathsValue,\n                        backgroundColor:[\n                          'rgba(255, 99, 132, 0.6)',\n                          'rgba(54, 162, 235, 0.6)',\n                          'rgba(255, 206, 86, 0.6)',\n                          'rgba(75, 192, 192, 0.6)',\n                          'rgba(153, 102, 255, 0.6)',\n                          'rgba(255, 159, 64, 0.6)',\n                          'rgba(255, 99, 132, 0.6)'\n                        ]\n                      }\n                    ]\n                  }\n            });\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n\n\n    render() {\n       //const {data} = this.state;\n     //  console.log(data.cases);\n        return( \n            <div className=\"chart-data\">\n                <div>\n                    <h1>Total Cases</h1>\n                    <Line\n                        data={this.state.chartCases}\n                        width={100}\n                        height={40}\n                        options={{ maintainAspectRatio: false }}\n                    />\n                </div>\n                <div>\n                    <h1>Total Deaths</h1>\n                    <Line\n                        data={this.state.chartDeaths}\n                        width={100}\n                        height={40}\n                        options={{ maintainAspectRatio: false }}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CountryCartData;","import React from 'react';\nimport axios from \"axios\";\nimport CountryCoronaItem from \"./CountryCoronaItem\";\nimport CountryCartData from \"./CountryChartData\";\n\nclass CountryCorona extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stats:{},\n            countryInfo:{}\n        };\n    }\n\n    componentDidMount (){\n        this.getData();\n    }\n\n    getData = () => {\n        let countryName= this.props.location.pathname\n        //console.log(countryName);\n        axios.request(`https://corona.lmao.ninja/v2/countries${countryName}`,{\n            method: \"GET\",\n            headers: {\n                \"x-rapidapi-host\": \"covid-19-coronavirus-statistics.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"74bf35c6b4msh23b08db937905cbp1c5a4ejsnd6dced0f920d\"\n            }\n        }).then(response => {\n            this.setState({\n                stats:response.data,\n                countryInfo:response.data.countryInfo,\n            })\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    render() {\n        const {stats, countryInfo} = this.state;\n        const renderData = <CountryCoronaItem stats={stats} countryInfo={countryInfo} />\n        let name = this.props.location.pathname;\n        \n        return (\n            <div>\n                {renderData}\n                <CountryCartData countryName={name}/>\n            </div>\n        );\n    }\n}\n\n\nexport default CountryCorona;","import React from 'react';\n\nconst References = () => {\n    return (\n        <div>\n            <h1>References/Sources</h1>\n            <p><a href=\"https://www.worldometers.info/coronavirus/\" target=\"_blank\" rel=\"noopener noreferrer\" >https://www.worldometers.info/coronavirus/</a></p>\n            <p><a href=\"https://github.com/javieraviles/covidAPI\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/javieraviles/covidAPI</a></p>\n            <p><a href=\"https://github.com/javieraviles/covidAPI\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/javieraviles/covidAPI</a></p>\n            <p><a href=\"https://docs.corona.lmao-xd.wtf/\" target=\"_blank\" rel=\"noopener noreferrer\">https://docs.corona.lmao-xd.wtf/</a></p>\n            <p><a href=\"https://www.covid19india.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.covid19india.org/</a></p>\n        </div>\n    );\n}\n\n\nexport default References;","import React, { Component } from 'react';\n\nimport ScrollToTop from \"react-router-scroll-top\";\nimport { Switch, Route } from 'react-router-dom';\n\nimport Coronavirus from '../components/coronavirus/Coronavirus';\nimport IndiaCoronavirus from \"../components/india/IndiaCoronavirus\"\nimport CountryCorona from \"../components/country/CountryCorona\";\nimport References from '../components/references/References';\n\nclass  AppContent extends Component {\n    render(){\n        return (\n            <div className=\"app-content\">\n                 <ScrollToTop>\n                    <Switch>\n                        <Route exact path=\"/\" component={Coronavirus} />\n                        <Route exact path=\"/world\" component={Coronavirus} />\n                        <Route exact path=\"/references\" component={References} />\n                        <Route exact path=\"/india\" component={IndiaCoronavirus} />\n                        <Route path=\"/\" component={CountryCorona} />\n                    </Switch>\n                </ScrollToTop>\n            </div>\n        )\n    }\n}\n\nexport default AppContent","import React from 'react'\nimport {Link} from \"react-router-dom\"\n\nexport default function AppFooter() {\n    return (\n        <div className=\"app-footer text-center\">\n            2020 @covid19dashboard. All Rights Reserved. <Link to=\"/references\">References</Link>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport \"./css/main.css\"\nimport AppHeader from './layouts/AppHeader';\nimport AppContent from './layouts/AppContent';\nimport AppFooter from './layouts/AppFooter';\n\n// import * as am4core from \"@amcharts/amcharts4/core\";\n// import * as am4charts from \"@amcharts/amcharts4/charts\";\n// import am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\n// am4core.useTheme(am4themes_animated);\n\nclass  App extends Component {\n\n  // componentDidMount() {\n  //   let chart = am4core.create(\"chartdiv\", am4charts.XYChart);\n\n  //   chart.paddingRight = 20;\n\n  //   let data = [];\n  //   let visits = 10;\n  //   for (let i = 1; i < 366; i++) {\n  //     visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\n  //     data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\n  //   }\n\n  //   chart.data = data;\n\n  //   let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n  //   dateAxis.renderer.grid.template.location = 0;\n\n  //   let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n  //   valueAxis.tooltip.disabled = true;\n  //   valueAxis.renderer.minWidth = 35;\n\n  //   let series = chart.series.push(new am4charts.LineSeries());\n  //   series.dataFields.dateX = \"date\";\n  //   series.dataFields.valueY = \"value\";\n\n  //   series.tooltipText = \"{valueY.value}\";\n  //   chart.cursor = new am4charts.XYCursor();\n\n  //   let scrollbarX = new am4charts.XYChartScrollbar();\n  //   scrollbarX.series.push(series);\n  //   chart.scrollbarX = scrollbarX;\n\n  //   this.chart = chart;\n  // }\n\n  // componentWillUnmount() {\n  //   if (this.chart) {\n  //     this.chart.dispose();\n  //   }\n  // }\n\n\n  render(){\n    return (\n      <div className=\"app-container\">\n        <AppHeader />\n        <AppContent/>\n        <AppFooter/>\n        {/* <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode><BrowserRouter>\n    <App /></BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}